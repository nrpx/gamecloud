'use client'

import React, { useState } from 'react'
import {
  DialogRoot,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogCloseTrigger,
  DialogBody
} from '@chakra-ui/react'
import { gamesApi, downloadsApi } from '@/lib/api'
import { showSuccess, showError } from '@/lib/toast'
import { useRefreshGames } from '@/stores/gamesLibraryStore'
import UnifiedGameForm from '@/components/forms/UnifiedGameForm'
import { convertFormDataToCreateRequest } from '@/components/forms/UnifiedGameForm'
import type { GameFormData } from '@/types/game-form'

interface AddGameModalProps {
  isOpen: boolean
  onClose: () => void
}

export default function AddGameModal({ isOpen, onClose }: AddGameModalProps) {
  const [isLoading, setIsLoading] = useState(false)
  const refreshGames = useRefreshGames()

  const handleSubmit = async (formData: GameFormData) => {
    setIsLoading(true)
    
    try {
      console.log('üéÆ [AddGameModal] Submitting form data:', formData)
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ –∑–∞–ø—Ä–æ—Å API
      const gameData = convertFormDataToCreateRequest(formData)
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ—Ä—Ä–µ–Ω—Ç –¥–∞–Ω–Ω—ã–µ
      let torrentUrl = ''
      let torrentFile: File | null = null
      
      if (formData.torrent?.method === 'url' && formData.torrent.url) {
        torrentUrl = formData.torrent.url
      } else if (formData.torrent?.method === 'file' && formData.torrent.file) {
        torrentFile = formData.torrent.file[0] || null
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º torrent_url –≤ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å URL
      if (torrentUrl) {
        gameData.torrent_url = torrentUrl
      }
      
      // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —á—Ç–æ torrent_url –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–∫–∞ –¥–ª—è API
      const apiGameData = {
        ...gameData,
        torrent_url: gameData.torrent_url || ''
      }
      
      console.log('üì§ [AddGameModal] Creating game with data:', apiGameData)
      
      // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
      const newGame = await gamesApi.create(apiGameData)
      console.log('‚úÖ [AddGameModal] Game created:', newGame)
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ—Ä—Ä–µ–Ω—Ç –¥–∞–Ω–Ω—ã–µ - –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      if (torrentUrl || torrentFile) {
        try {
          if (torrentUrl) {
            await downloadsApi.create({
              game_id: newGame.id,
              torrent_url: torrentUrl
            })
            console.log('üåê [AddGameModal] Download started with URL')
          } else if (torrentFile) {
            await downloadsApi.createFromFile(newGame.id, torrentFile)
            console.log('üìÅ [AddGameModal] Download started with file')
          }
        } catch (downloadError) {
          console.error('‚ùå [AddGameModal] Download start failed:', downloadError)
          showError('–ò–≥—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –Ω–æ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
        }
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä
      refreshGames()
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      showSuccess('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      onClose()
      
    } catch (error) {
      console.error('‚ùå [AddGameModal] Error creating game:', error)
      showError(
        error instanceof Error 
          ? `–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä—ã: ${error.message}`
          : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä—ã'
      )
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <DialogRoot 
      open={isOpen} 
      onOpenChange={(e) => e.open ? undefined : onClose()}
      size="xl"
    >
      <DialogContent maxH="90vh" overflowY="auto">
        <DialogHeader>
          <DialogTitle fontSize="xl" fontWeight="bold" color="blue.600">
            –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
          </DialogTitle>
          <DialogCloseTrigger />
        </DialogHeader>
        
        <DialogBody pb={6}>
          <UnifiedGameForm
            mode="create"
            onSubmit={handleSubmit}
            isLoading={isLoading}
          />
        </DialogBody>
      </DialogContent>
    </DialogRoot>
  )
}